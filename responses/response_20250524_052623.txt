Model: gpt-4
Timestamp: 20250524_052623

Prompt:
--------------------------------------------------
Generate 500 more items from this array of 50 items, the SQL should remain the same but rephrase the questions in different ways
[
    {
      "db_id": "nyc_data",
      "id": 1,
      "question": "What are the names of all the neighborhoods in New York City?",
      "difficulty": "Easy",
      "evidence": "names of all neighborhoods refers to name column in nyc_neighborhoods table",
      "SQL": "SELECT name FROM nyc_neighborhoods;"
    },
    {
      "db_id": "nyc_data",
      "id": 2,
      "question": "What are the names of all the neighborhoods in Brooklyn?",
      "difficulty": "Easy",
      "evidence": "neighborhoods in Brooklyn refers to nyc_neighborhoods where boroname = 'Brooklyn'",
      "SQL": "SELECT name FROM nyc_neighborhoods WHERE boroname = 'Brooklyn';"
    },
    {
      "db_id": "nyc_data",
      "id": 3,
      "question": "What is the number of letters in the names of all the neighborhoods in Brooklyn?",
      "difficulty": "Easy",
      "evidence": "number of letters refers to char_length(name); neighborhoods in Brooklyn refers to nyc_neighborhoods where boroname = 'Brooklyn'",
      "SQL": "SELECT char_length(name) FROM nyc_neighborhoods WHERE boroname = 'Brooklyn';"
    },
    {
      "db_id": "nyc_data",
      "id": 4,
      "question": "What is the average number of letters and standard deviation of number of letters in the names of all the neighborhoods in Brooklyn?",
      "difficulty": "Intermediate",
      "evidence": "average number of letters refers to avg(char_length(name)); standard deviation refers to stddev(char_length(name)); neighborhoods in Brooklyn refers to nyc_neighborhoods where boroname = 'Brooklyn'",
      "SQL": "SELECT avg(char_length(name)), stddev(char_length(name)) FROM nyc_neighborhoods WHERE boroname = 'Brooklyn';"
    },
    {
      "db_id": "nyc_data",
      "id": 5,
      "question": "What is the average number of letters in the names of all the neighborhoods in New York City, reported by borough?",
      "difficulty": "Intermediate",
      "evidence": "average number of letters refers to avg(char_length(name)); reported by borough refers to GROUP BY boroname",
      "SQL": "SELECT boroname, avg(char_length(name)) FROM nyc_neighborhoods GROUP BY boroname;"
    },
    {
      "db_id": "nyc_data",
      "id": 6,
      "question": "How many records are in the nyc_streets table?",
      "difficulty": "Easy",
      "evidence": "how many records refers to Count(*)",
      "SQL": "SELECT Count(*) FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 7,
      "question": "How many streets in NYC start with 'B'?",
      "difficulty": "Easy",
      "evidence": "streets that start with 'B' refers to name LIKE 'B%'",
      "SQL": "SELECT Count(*) FROM nyc_streets WHERE name LIKE 'B%';"
    },
    {
      "db_id": "nyc_data",
      "id": 8,
      "question": "What is the population of NYC?",
      "difficulty": "Easy",
      "evidence": "population of NYC refers to Sum(popn_total) from nyc_census_blocks",
      "SQL": "SELECT Sum(popn_total) FROM nyc_census_blocks;"
    },
    {
      "db_id": "nyc_data",
      "id": 9,
      "question": "What is the population of 'The Bronx'?",
      "difficulty": "Easy",
      "evidence": "population of 'The Bronx' refers to Sum(popn_total) from nyc_census_blocks where boroname = 'The Bronx'",
      "SQL": "SELECT Sum(popn_total) FROM nyc_census_blocks WHERE boroname = 'The Bronx';"
    },
    {
      "db_id": "nyc_data",
      "id": 10,
      "question": "How many 'neighborhoods' are in each borough?",
      "difficulty": "Easy",
      "evidence": "number of neighborhoods in each borough refers to count(*) from nyc_neighborhoods GROUP BY boroname",
      "SQL": "SELECT boroname, count(*) FROM nyc_neighborhoods GROUP BY boroname;"
    },
    {
      "db_id": "nyc_data",
      "id": 11,
      "question": "For each borough in NYC, what is percentage of the population is white?",
      "difficulty": "Intermediate",
      "evidence": "percentage of white population refers to 100.0 * Sum(popn_white)/Sum(popn_total)",
      "SQL": "SELECT boroname, 100.0 * Sum(popn_white)/Sum(popn_total) AS pct FROM nyc_census_blocks GROUP BY boroname;"
    },
    {
      "db_id": "nyc_data",
      "id": 12,
      "question": "What is the area of the 'West Village' neighborhood?",
      "difficulty": "Intermediate",
      "evidence": "area refers to ST_Area(geom); 'West Village' refers to name = 'West Village'",
      "SQL": "SELECT ST_Area(geom) FROM nyc_neighborhoods WHERE name = 'West Village';"
    },
    {
      "db_id": "nyc_data",
      "id": 13,
      "question": "What is the geometry type of 'Pelham St'? The length?",
      "difficulty": "Intermediate",
      "evidence": "geometry type refers to ST_GeometryType(geom); length refers to ST_Length(geom); 'Pelham St' refers to name = 'Pelham St'",
      "SQL": "SELECT ST_GeometryType(geom), ST_Length(geom) FROM nyc_streets WHERE name = 'Pelham St';"
    },
    {
      "db_id": "nyc_data",
      "id": 14,
      "question": "What is the GeoJSON representation of the 'Broad St' subway station?",
      "difficulty": "Intermediate",
      "evidence": "GeoJSON representation refers to ST_AsGeoJSON(geom); 'Broad St' subway station refers to name = 'Broad St'",
      "SQL": "SELECT ST_AsGeoJSON(geom) FROM nyc_subway_stations WHERE name = 'Broad St';"
    },
    {
      "db_id": "nyc_data",
      "id": 15,
      "question": "What is the total length of streets (in kilometers) in New York City?",
      "difficulty": "Intermediate",
      "evidence": "total length of streets refers to Sum(ST_Length(geom)); converting to kilometers refers to dividing by 1000",
      "SQL": "SELECT Sum(ST_Length(geom)) / 1000 FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 16,
      "question": "What is the area of Manhattan in acres?",
      "difficulty": "Intermediate",
      "evidence": "area of Manhattan refers to Sum(ST_Area(geom)) from nyc_neighborhoods where boroname = 'Manhattan'; converting to acres refers to dividing by 4047",
      "SQL": "SELECT Sum(ST_Area(geom)) / 4047 FROM nyc_neighborhoods WHERE boroname = 'Manhattan';"
    },
    {
      "db_id": "nyc_data",
      "id": 17,
      "question": "What is the area of Manhattan in acres?",
      "difficulty": "Intermediate",
      "evidence": "area of Manhattan refers to Sum(ST_Area(geom)) from nyc_census_blocks where boroname = 'Manhattan'; converting to acres refers to dividing by 4047",
      "SQL": "SELECT Sum(ST_Area(geom)) / 4047 FROM nyc_census_blocks WHERE boroname = 'Manhattan';"
    },
    {
      "db_id": "nyc_data",
      "id": 18,
      "question": "What is the most westerly subway station?",
      "difficulty": "Intermediate",
      "evidence": "most westerly refers to the station with the lowest ST_X value; need to order by ST_X(geom) and limit 1",
      "SQL": "SELECT ST_X(geom), name FROM nyc_subway_stations ORDER BY ST_X(geom) LIMIT 1;"
    },
    {
      "db_id": "nyc_data",
      "id": 19,
      "question": "How long is 'Columbus Cir' (aka Columbus Circle)?",
      "difficulty": "Intermediate",
      "evidence": "length refers to ST_Length(geom); 'Columbus Cir' refers to name = 'Columbus Cir'",
      "SQL": "SELECT ST_Length(geom) FROM nyc_streets WHERE name = 'Columbus Cir';"
    },
    {
      "db_id": "nyc_data",
      "id": 20,
      "question": "What is the length of streets in New York City, summarized by type?",
      "difficulty": "Intermediate",
      "evidence": "length of streets refers to Sum(ST_Length(geom)); summarized by type refers to GROUP BY type",
      "SQL": "SELECT type, Sum(ST_Length(geom)) AS length FROM nyc_streets GROUP BY type ORDER BY length DESC;"
    },
    {
      "db_id": "nyc_data",
      "id": 21,
      "question": "Which neighborhood does the Broad Street subway station intersect?",
      "difficulty": "Intermediate",
      "evidence": "Broad Street subway station refers to name = 'Broad St'; need to convert geom to text using ST_AsText",
      "SQL": "SELECT name, ST_AsText(geom) FROM nyc_subway_stations WHERE name = 'Broad St';"
    },
    {
      "db_id": "nyc_data",
      "id": 22,
      "question": "What are the streets nearby Broad Street subway station?",
      "difficulty": "Advanced",
      "evidence": "streets nearby refers to ST_DWithin; Broad Street subway station location is represented by POINT(583571 4506714) in SRID 26918; nearby distance is 10 units",
      "SQL": "SELECT name FROM nyc_streets WHERE ST_DWithin(geom, ST_GeomFromText('POINT(583571 4506714)',26918), 10);"
    },
    {
      "db_id": "nyc_data",
      "id": 23,
      "question": "What is the geometry value for the street named 'Atlantic Commons'?",
      "difficulty": "Intermediate",
      "evidence": "geometry value refers to ST_AsText(geom); 'Atlantic Commons' refers to name = 'Atlantic Commons'",
      "SQL": "SELECT ST_AsText(geom) FROM nyc_streets WHERE name = 'Atlantic Commons';"
    },
    {
      "db_id": "nyc_data",
      "id": 24,
      "question": "What neighborhood and borough is Atlantic Commons in?",
      "difficulty": "Advanced",
      "evidence": "Atlantic Commons is represented by the linestring LINESTRING(586782 4504202,586864 4504216) in SRID 26918; need to find neighborhoods that intersect with this linestring",
      "SQL": "SELECT name, boroname FROM nyc_neighborhoods WHERE ST_Intersects(geom, ST_GeomFromText('LINESTRING(586782 4504202,586864 4504216)', 26918));"
    },
    {
      "db_id": "nyc_data",
      "id": 25,
      "question": "What streets does Atlantic Commons join with?",
      "difficulty": "Advanced",
      "evidence": "streets that join with Atlantic Commons refers to streets within a very small distance (0.1) of the linestring representing Atlantic Commons",
      "SQL": "SELECT name FROM nyc_streets WHERE ST_DWithin(geom, ST_GeomFromText('LINESTRING(586782 4504202,586864 4504216)', 26918), 0.1);"
    },
    {
      "db_id": "nyc_data",
      "id": 26,
      "question": "Approximately how many people live on (within 50 meters of) Atlantic Commons?",
      "difficulty": "Advanced",
      "evidence": "people living within 50 meters refers to Sum(popn_total) from census blocks within 50 units distance of the Atlantic Commons linestring",
      "SQL": "SELECT Sum(popn_total) FROM nyc_census_blocks WHERE ST_DWithin(geom, ST_GeomFromText('LINESTRING(586782 4504202,586864 4504216)', 26918), 50);"
    },
    {
      "db_id": "nyc_data",
      "id": 27,
      "question": "What neighborhood contains Broad St station?",
      "difficulty": "Advanced",
      "evidence": "neighborhood contains station refers to ST_Contains(neighborhoods.geom, subways.geom); Broad St station refers to subways.name = 'Broad St'",
      "SQL": "SELECT subways.name AS subway_name, neighborhoods.name AS neighborhood_name, neighborhoods.boroname AS borough FROM nyc_neighborhoods AS neighborhoods JOIN nyc_subway_stations AS subways ON ST_Contains(neighborhoods.geom, subways.geom) WHERE subways.name = 'Broad St';"
    },
    {
      "db_id": "nyc_data",
      "id": 28,
      "question": "What is the population and racial make-up of the neighborhoods of Manhattan?",
      "difficulty": "Advanced",
      "evidence": "population refers to Sum(census.popn_total); racial make-up refers to percentage of white and black population; neighborhoods in Manhattan refers to neighborhoods.boroname = 'Manhattan'",
      "SQL": "SELECT neighborhoods.name AS neighborhood_name, Sum(census.popn_total) AS population, 100.0 * Sum(census.popn_white) / Sum(census.popn_total) AS white_pct, 100.0 * Sum(census.popn_black) / Sum(census.popn_total) AS black_pct FROM nyc_neighborhoods AS neighborhoods JOIN nyc_census_blocks AS census ON ST_Intersects(neighborhoods.geom, census.geom) WHERE neighborhoods.boroname = 'Manhattan' GROUP BY neighborhoods.name ORDER BY white_pct DESC;"
    },
    {
      "db_id": "nyc_data",
      "id": 29,
      "question": "What is the baseline NYC racial makeup?",
      "difficulty": "Intermediate",
      "evidence": "baseline racial makeup refers to percentage of white and black population for the entire city",
      "SQL": "SELECT 100.0 * Sum(popn_white) / Sum(popn_total) AS white_pct, 100.0 * Sum(popn_black) / Sum(popn_total) AS black_pct, Sum(popn_total) AS popn_total FROM nyc_census_blocks;"
    },
    {
      "db_id": "nyc_data",
      "id": 30,
      "question": "What is the distinct subway routes in NYC?",
      "difficulty": "Easy",
      "evidence": "distinct subway routes refers to DISTINCT routes from nyc_subway_stations",
      "SQL": "SELECT DISTINCT routes FROM nyc_subway_stations;"
    },
    {
      "db_id": "nyc_data",
      "id": 31,
      "question": "What are all the A-train stations in NYC?",
      "difficulty": "Intermediate",
      "evidence": "A-train stations refers to subway stations where routes column contains 'A'; this is checked using strpos(subways.routes,'A') > 0",
      "SQL": "SELECT DISTINCT routes FROM nyc_subway_stations AS subways WHERE strpos(subways.routes,'A') > 0;"
    },
    {
      "db_id": "nyc_data",
      "id": 32,
      "question": "After 9/11, the 'Battery Park' neighborhood was off limits for several days. How many people had to be evacuated?",
      "difficulty": "Advanced",
      "evidence": "population of 'Battery Park' refers to Sum(popn_total) from nyc_census_blocks where neighborhood name = 'Battery Park'",
      "SQL": "SELECT Sum(popn_total) FROM nyc_neighborhoods AS n JOIN nyc_census_blocks AS c ON ST_Intersects(n.geom, c.geom) WHERE n.name = 'Battery Park';"
    },
    {
      "db_id": "nyc_data",
      "id": 33,
      "question": "What neighborhood has the highest population density (persons/km2)?",
      "difficulty": "Advanced",
      "evidence": "population density refers to Sum(popn_total) / (ST_Area(geom) / 1000000.0); need to group by neighborhood name and order by density",
      "SQL": "SELECT n.name, Sum(c.popn_total) / (ST_Area(n.geom) / 1000000.0) AS popn_per_sqkm FROM nyc_census_blocks AS c JOIN nyc_neighborhoods AS n ON ST_Intersects(c.geom, n.geom) GROUP BY n.name, n.geom ORDER BY 2 DESC;"
    },
    {
      "db_id": "nyc_data",
      "id": 34,
      "question": "What is the total population of the 'West Village' neighborhood in New York City?",
      "difficulty": "Advanced",
      "evidence": "population of 'West Village' refers to Sum(popn_total) from nyc_census_blocks where neighborhood name = 'West Village'",
      "SQL": "SELECT Sum(popn_total) FROM nyc_neighborhoods neighborhoods JOIN nyc_census_blocks blocks ON ST_Intersects(neighborhoods.geom, blocks.geom) WHERE neighborhoods.name = 'West Village';"
    },
    {
      "db_id": "nyc_data",
      "id": 35,
      "question": "Which geographic coordinates correspond to the 'Broad St' subway station?",
      "difficulty": "Intermediate",
      "evidence": "geographic coordinates refers to ST_AsText(ST_Transform(geom,4326)); 'Broad St' subway station refers to name = 'Broad St'",
      "SQL": "SELECT ST_AsText(ST_Transform(geom,4326)) FROM nyc_subway_stations WHERE name = 'Broad St';"
    },
    {
      "db_id": "nyc_data",
      "id": 36,
      "question": "What is the length of all streets in New York, as measured in UTM 18?",
      "difficulty": "Easy",
      "evidence": "length of streets refers to Sum(ST_Length(geom))",
      "SQL": "SELECT Sum(ST_Length(geom)) FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 37,
      "question": "What is the WKT definition of SRID 2831?",
      "difficulty": "Easy",
      "evidence": "WKT definition refers to srtext from spatial_ref_sys where SRID = 2831",
      "SQL": "SELECT srtext FROM spatial_ref_sys WHERE SRID = 2831;"
    },
    {
      "db_id": "nyc_data",
      "id": 38,
      "question": "What is the length of all streets in New York, as measured in SRID 2831?",
      "difficulty": "Intermediate",
      "evidence": "length of streets refers to Sum(ST_Length(ST_Transform(geom,2831)))",
      "SQL": "SELECT Sum(ST_Length(ST_Transform(geom,2831))) FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 39,
      "question": "How many streets cross the 74th meridian?",
      "difficulty": "Advanced",
      "evidence": "streets crossing the 74th meridian refers to ST_Intersects with a linestring representing the 74th meridian",
      "SQL": "SELECT Count(*) FROM nyc_streets WHERE ST_Intersects(ST_Transform(geom, 4326), 'SRID=4326;LINESTRING(-74 20, -74 60)');"
    },
    {
      "db_id": "nyc_data",
      "id": 40,
      "question": "How many streets cross the 74th meridian?",
      "difficulty": "Advanced",
      "evidence": "streets crossing the 74th meridian refers to ST_Intersects with a linestring representing the 74th meridian",
      "SQL": "SELECT Count(*) FROM nyc_streets WHERE ST_Intersects(geom, ST_Transform(ST_Segmentize('SRID=4326;LINESTRING(-74 20, -74 60)'::geometry,0.001), 26918));"
    },
    {
      "db_id": "nyc_data",
      "id": 41,
      "question": "What distance between Los Angeles and Paris using geometry?",
      "difficulty": "Advanced",
      "evidence": "distance between two points refers to ST_Distance using geometry",
      "SQL": "SELECT ST_Distance('SRID=4326;POINT(-118.4079 33.9434)'::geometry, 'SRID=4326;POINT(2.5559 49.0083)'::geometry);"
    },
    {
      "db_id": "nyc_data",
      "id": 42,
      "question": "What distance between Los Angeles and Paris using geography?",
      "difficulty": "Advanced",
      "evidence": "distance between two points refers to ST_Distance using geography",
      "SQL": "SELECT ST_Distance('SRID=4326;POINT(-118.4079 33.9434)'::geography, 'SRID=4326;POINT(2.5559 49.0083)'::geography);"
    },
    {
      "db_id": "nyc_data",
      "id": 43,
      "question": "What is the closest approach to iceland on lax/cdg route?",
      "difficulty": "Advanced",
      "evidence": "closest approach refers to ST_Distance between a linestring and a point",
      "SQL": "SELECT ST_Distance(ST_GeographyFromText('LINESTRING(-118.4079 33.9434, 2.5559 49.0083)'), ST_GeographyFromText('POINT(-22.6056 63.9850)'));"
    },
    {
      "db_id": "nyc_data",
      "id": 44,
      "question": "What is the distance between Los Angeles International Airport (LAX) and Narita International Airport (NRT) using geometric (flat plane) different spatial distance method?",
      "difficulty": "Advanced",
      "evidence": "distance between two points refers to ST_Distance using geometry",
      "SQL": "SELECT ST_Distance(ST_GeometryFromText('Point(-118.4079 33.9434)'), ST_GeometryFromText('Point(139.733 35.567)')) AS geometry_distance;"
    },
    {
      "db_id": "nyc_data",
      "id": 45,
      "question": "What is the distance between Los Angeles International Airport (LAX) and Narita International Airport (NRT) using geographic (spherical Earth) different spatial distance method?",
      "difficulty": "Advanced",
      "evidence": "distance between two points refers to ST_Distance using geography",
      "SQL": "SELECT ST_Distance(ST_GeographyFromText('Point(-118.4079 33.9434)'), ST_GeographyFromText('Point(139.733 35.567)')) AS geography_distance;"
    },
    {
      "db_id": "nyc_data",
      "id": 46,
      "question": "How far is New York from Seattle? What are the units of the answer?",
      "difficulty": "Advanced",
      "evidence": "distance between two points refers to ST_Distance using geography",
      "SQL": "SELECT ST_Distance('POINT(-74.0064 40.7142)'::geography, 'POINT(-122.3331 47.6097)'::geography);"
    },
    {
      "db_id": "nyc_data",
      "id": 47,
      "question": "What is the total length of all streets in New York, calculated on the spheroid?",
      "difficulty": "Advanced",
      "evidence": "total length of streets refers to Sum(ST_Length(Geography(ST_Transform(geom,4326))))",
      "SQL": "SELECT Sum(ST_Length(Geography(ST_Transform(geom,4326)))) FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 48,
      "question": "Does 'POINT(1 2.0001)' intersect with 'POLYGON((0 0, 0 2, 2 2, 2 0, 0 0))' in geography?",
      "difficulty": "Intermediate",
      "evidence": "intersection refers to ST_Intersects using geography",
      "SQL": "SELECT ST_Intersects('POINT(1 2.0001)'::geography, 'POLYGON((0 0,0 2,2 2,2 0,0 0))'::geography);"
    },
    {
      "db_id": "nyc_data",
      "id": 49,
      "question": "Does 'POINT(1 2.0001)' intersect with 'POLYGON((0 0, 0 2, 2 2, 2 0, 0 0))' in geometry?",
      "difficulty": "Intermediate",
      "evidence": "intersection refers to ST_Intersects using geometry",
      "SQL": "SELECT ST_Intersects('POINT(1 2.0001)'::geometry, 'POLYGON((0 0,0 2,2 2,2 0,0 0))'::geometry);"
    },
    {
      "db_id": "nyc_data",
      "id": 50,
      "question": "What is the the geometry of Broad St in NYC?",
      "difficulty": "Intermediate",
      "evidence": "geometry refers to ST_AsEWKT(geom); 'Broad St' refers to name = 'Broad St'",
      "SQL": "SELECT ST_AsEWKT(geom) FROM nyc_subway_stations WHERE name = 'Broad St';"
    }
  ]
 
 


Response:
--------------------------------------------------
[
    {
      "db_id": "nyc_data",
      "id": 51,
      "question": "Can you provide the names of all New York City neighborhoods?",
      "difficulty": "Easy",
      "evidence": "asking for names of all neighborhoods requires name column in nyc_neighborhoods table",
      "SQL": "SELECT name FROM nyc_neighborhoods;"
    },
    {
      "db_id": "nyc_data",
      "id": 52,
      "question": "Please display the names of all neighborhoods located in Brooklyn.",
      "difficulty": "Easy",
      "evidence": "neighborhoods in Brooklyn equates to nyc_neighborhoods where boroname = 'Brooklyn'",
      "SQL": "SELECT name FROM nyc_neighborhoods WHERE boroname = 'Brooklyn';"
    },
    {
      "db_id": "nyc_data",
      "id": 53,
      "question": "Could you tell me the length in letters of each neighborhood name in Brooklyn?",
      "difficulty": "Easy",
      "evidence": "length in letters relates to char_length(name); neighborhoods in Brooklyn are in nyc_neighborhoods where boroname = 'Brooklyn'",
      "SQL": "SELECT char_length(name) FROM nyc_neighborhoods WHERE boroname = 'Brooklyn';"
    },
    {
      "db_id": "nyc_data",
      "id": 54,
      "question": "What's the average and standard deviation of letters in the names of Brooklyn neighborhoods?",
      "difficulty": "Intermediate",
      "evidence": "average letter count is avg(char_length(name)); standard deviation is stddev(char_length(name)); neighborhoods in Brooklyn are in nyc_neighborhoods where boroname = 'Brooklyn'",
      "SQL": "SELECT avg(char_length(name)), stddev(char_length(name)) FROM nyc_neighborhoods WHERE boroname = 'Brooklyn';"
    },
    {
      "db_id": "nyc_data",
      "id": 55,
      "question": "Please provide the average name character count for all New York City neighborhoods, separated by borough.",
      "difficulty": "Intermediate",
      "evidence": "average name character count is avg(char_length(name)); separation by borough means GROUP BY boroname",
      "SQL": "SELECT boroname, avg(char_length(name)) FROM nyc_neighborhoods GROUP BY boroname;"
    },
    {
      "db_id": "nyc_data",
      "id": 56,
      "question": "How many entries are there in the nyc_streets table?",
      "difficulty": "Easy",
      "evidence": "number of entries refers to Count(*)",
      "SQL": "SELECT Count(*) FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 57,
      "question": "How many streets in New York City start with the letter 'B'?",
      "difficulty": "Easy",
      "evidence": "streets that start with 'B' corresponds to name LIKE 'B%'",
      "SQL": "SELECT Count(*) FROM nyc_streets WHERE name LIKE 'B%';"
    },
    {
      "db_id": "nyc_data",
      "id": 58,
      "question": "What's New York City's total population?",
      "difficulty": "Easy",
      "evidence": "NYC's total population requires Sum(popn_total) from nyc_census_blocks",
      "SQL": "SELECT Sum(popn_total) FROM nyc_census_blocks;"
    },
    {
      "db_id": "nyc_data",
      "id": 59,
      "question": "What's the population size of 'The Bronx'?",
      "difficulty": "Easy",
      "evidence": "'The Bronx' population ties to Sum(popn_total) from nyc_census_blocks where boroname = 'The Bronx'",
      "SQL": "SELECT Sum(popn_total) FROM nyc_census_blocks WHERE boroname = 'The Bronx';"
    },
    {
      "db_id": "nyc_data",
      "id": 60,
      "question": "How many neighborhoods does each borough of New York City have?",
      "difficulty": "Easy",
      "evidence": "number of neighborhoods per borough ties to count(*) from nyc_neighborhoods GROUP BY boroname",
      "SQL": "SELECT boroname, count(*) FROM nyc_neighborhoods GROUP BY boroname;"
    },
    {
      "db_id": "nyc_data",
      "id": 61,
      "question": "What is the percentage of the white population in each of NYC's boroughs?",
      "difficulty": "Intermediate",
      "evidence": "percentage of white population is given by 100.0 * Sum(popn_white)/Sum(popn_total)",
      "SQL": "SELECT boroname, 100.0 * Sum(popn_white)/Sum(popn_total) AS pct FROM nyc_census_blocks GROUP BY boroname;"
    },
    {
      "db_id": "nyc_data",
      "id": 62,
      "question": "What is the total area of the 'West Village' neighborhood?",
      "difficulty": "Intermediate",
      "evidence": "area is represented by ST_Area(geom); 'West Village' equates to name = 'West Village'",
      "SQL": "SELECT ST_Area(geom) FROM nyc_neighborhoods WHERE name = 'West Village';"
    },
    {
      "db_id": "nyc_data",
      "id": 63,
      "question": "Can you give me the geometry type of 'Pelham St' and its length?",
      "difficulty": "Intermediate",
      "evidence": "geometry type pertains to ST_GeometryType(geom); length relates to ST_Length(geom); 'Pelham St' relates to name = 'Pelham St'",
      "SQL": "SELECT ST_GeometryType(geom), ST_Length(geom) FROM nyc_streets WHERE name = 'Pelham St';"
    },
    {
      "db_id": "nyc_data",
      "id": 64,
      "question": "What is 'Broad St' subway station's GeoJSON representation?",
      "difficulty": "Intermediate",
      "evidence": "GeoJSON representation involves ST_AsGeoJSON(geom); 'Broad St' subway station relates to name = 'Broad St'",
      "SQL": "SELECT ST_AsGeoJSON(geom) FROM nyc_subway_stations WHERE name = 'Broad St';"
    },
    {
      "db_id": "nyc_data",
      "id": 65,
      "question": "What is the total street length (in kilometers) in New York City?",
      "difficulty": "Intermediate",
      "evidence": "total street length is Sum(ST_Length(geom)); conversion to kilometers uses division by 1000",
      "SQL": "SELECT Sum(ST_Length(geom)) / 1000 FROM nyc_streets;"
    },
    {
      "db_id": "nyc_data",
      "id": 66,
      "question": "What is the total area of Manhattan measured in acres?",
      "difficulty": "Intermediate",
      "evidence": "Manhattan's total area requires Sum(ST_Area(geom)) from nyc_neighborhoods where boroname = 'Manhattan'; conversion to acres uses division by 4047",
      "SQL": "SELECT Sum(ST_Area(geom)) / 4047 FROM nyc_neighborhoods WHERE boroname = 'Manhattan';"
    },
    {
      "db_id": "nyc_data",
      "id": 67,
      "question": "What is the total area of Manhattan calculated in acres?",
      "difficulty": "Intermediate",
      "evidence": "The total area of Manhattan requires Sum(ST_Area(geom)) from nyc_census_blocks where boroname = 'Manhattan'; to convert to acres you would divide by 4047",
      "SQL": "SELECT Sum(ST_Area(geom)) / 4047 FROM nyc_census_blocks WHERE boroname = 'Manhattan';"
    },
    {
      "db_id": "nyc_data",
      "id": 68,
      "question": "Which subway station is the furthest west?",
      "difficulty": "Intermediate",
      "evidence": "most westerly refers to the station with the lowest ST_X value; need to order by ST_X(geom) and limit 1",
      "SQL": "SELECT ST_X(geom), name FROM nyc_subway_stations ORDER BY ST_X(geom) LIMIT 1;"
    },
    {
      "db_id": "nyc_data",
      "id": 69,
      "question": "How far is 'Columbus Cir' (aka Columbus Circle)?",
      "difficulty": "Intermediate",
      "evidence": "length is ST_Length(geom); 'Columbus Cir' pertains to name = 'Columbus Cir'",
      "SQL": "SELECT ST_Length(geom) FROM nyc_streets WHERE name = 'Columbus Cir';"
    },
    {
      "db_id": "nyc_data",
      "id": 70,
      "question": "What is the length of each street type in New York City?",
      "difficulty": "Intermediate",
      "evidence": "length of streets is Sum(ST_Length(geom)); sorted by type means GROUP BY type",
      "SQL": "SELECT type, Sum(ST_Length(geom)) AS length FROM nyc_streets GROUP BY type ORDER BY length DESC;"
    },
    {
      "db_id": "nyc_data",
      "id": 71,
      "question": "Which neighborhood is intersected by Broad Street subway station?",
      "difficulty": "Intermediate",
      "evidence": "Broad Street subway station refers to name = 'Broad St'; ST_AsText is used to convert geom to text",
      "SQL": "SELECT name, ST_AsText(geom) FROM nyc_subway_stations WHERE name = 'Broad St';"
    },
    {
      "db_id": "nyc_data",
      "id": 72,
      "question": "Which streets are proximate to Broad Street subway station?",
      "difficulty": "Advanced",
      "evidence": "nearby streets are identified by ST_DWithin; Broad Street subway station's location is POINT(583571 4506714) in SRID 26918; proximity is 10 units",
      "SQL": "SELECT name FROM nyc_streets WHERE ST_DWithin(geom, ST_GeomFromText('POINT(583571 4506714)',26918), 10);"
    },
    {
      "db_id": "nyc_data",
      "id": 73,
      "question": "What is the geometry value of the street known as 'Atlantic Commons'?",
     